/*
 This is an example of STREAM equivalence.
*/
                                     

<k> L.morse </k>
<sspecs>
not(xs) :~ 1 <| hd(xs) = 0 |> 0 : L.not(tl(xs));
zip(xs, ys) :~ hd(xs) : L.zip(ys, tl(xs));
morse :~ 0 : L.1 : L.zip(tl(L.morse), not(tl(L.morse)));
</sspecs> 

~

<k> L.f(morse) </k>
<sspecs>
neg(x) := 1 <| x = 0 |> 0;
not(xs) :~ 1 <| hd(xs) = 0 |> 0 : L.not(tl(xs));
zip(xs, ys) :~ hd(xs) : L.zip(ys, tl(xs));
f(xs) :~ hd(xs) : L.neg(hd(xs)) : L.f(tl(xs));
morse :~ 0 : L.1 : L.zip(tl(L.morse), not(tl(L.morse)));
</sspecs> ;

