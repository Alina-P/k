
1. This is a readme file for the developers.

2. Prerequisites

2.1 Java Develpment Kit (tested with JDK6 or higher)
You can follow the instructions here: 
http://docs.oracle.com/javase/7/docs/webnotes/install/index.html depending on 
the type of your machine.

To make sure that everything works you should be able to call 'java' and
'javac' from a Terminal.

2.2 Apache ANT
Linux and Mac:
    Most likely you will already have it.
Windows:
    Go to http://ant.apache.org/bindownload.cgi and download the zip with the 
    binary distribution. Unzip it in your desired location and follow the 
    instalation instructions from the 'INSTALL' file.

You can test if it works by calling 'ant' in a Terminal.

3. Install
Checkout this directory in your desired location and call 'ant' from the main
directory to build the .jar binaries. For convenient usage, you can update
your $PATH with <checkout-dir>/dist/bin (strongly recommended, but optional).

4. Work on Java code
Open eclipse and set your workspace to /javasources.  Go to 
File->Import->General->Existing projects into workspace, and select all of 
the projects from /javasources.  If you have the spoofax plugin installed in
eclipse, you might be able to work and compile directly within eclipse (the
main project is K3Java and can be used to test the main functionalities).

If your do not have the Spoofax plugin, you can still use Eclipse as an editor
and to test functionality not related to parsing.

5. Work on Maude code
Modify the Maude files found in /dist/bin/maude.  No need for recompilation.

6. Build the final release directory/archives
Call 'ant release' in the base directory.  This will create a k directory in
trunk containing the release distribution and two archives k-latest.(zip|tgz)

You can use 'ant release -Dversion="3.0"' to create a tagged release.

7. Compiling definitions and running programs
Assuming /dist/bin is in your path, you can compile definitions using
the 'kompile' command.  To execute a program you can use 'krun'.

8. Troubleshooting
If everything fails, try 'ant clean' and rebuild the entire project.
If that still doesn't work, verify that the maude files provided in the
distribution (k/bin/maude/binaries) are compatible with your system.
