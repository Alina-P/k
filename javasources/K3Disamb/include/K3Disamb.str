module K3Disamb

signature
  constructors
    MapItem1LKLKItem       : ListDlKDr * ListDlKDr -> MapItem
    MapItem1KKItem         : K * K -> MapItem
    SetItem1SIKItem        : K -> SetItem
    ListItem1LIKItem       : K -> ListItem
                           : String -> LABEL
    TagParam               : KEY * DzDzSTRING -> Tag
    TagParam               : KEY * TAGCONTENT -> Tag
    Tag                    : KEY -> Tag
    TagList                : TagList * TagList -> TagList
                           : Tag -> TagList
    NoTags                 : TagList
    Label                  : LABEL -> Label
    NoLabel                : Label
                           : String -> CellLabel
    CellLabelRewrite       : CellLabel * CellLabel -> CellLabel
    CellProperty           : DzDzID * DzDzSTRING -> CellProperty
                           : List -> CellContents
                           : Set -> CellContents
                           : Bag -> CellContents
                           : Map -> CellContents
                           : K -> CellContents
                           : CellContents -> B
    RightCell              : CellContents -> B
                           : B -> A
    LeftCell               : B -> A
    BagItem1BIKItem        : K -> BagItem
    Bag1ClosedCell         : CellLabel * List(CellProperty) * A * CellLabel -> BagItem
    Context                : K -> KSimpleSentence
    Map1Rule               : Label * Map -> KSimpleSentence
    Set1Rule               : Label * Set -> KSimpleSentence
    ListDlKDr1Rule         : Label * ListDlKDr -> KSimpleSentence
    Bag1Rule               : Label * Bag -> KSimpleSentence
    List1Rule              : Label * List -> KSimpleSentence
                           : KSimpleSentence -> KSentence
    AttributedSentence     : KSimpleSentence * TagList -> KSentence
    CondSentence           : KSimpleSentence * K -> KSentence
    AttributedCondSentence : KSimpleSentence * K * TagList -> KSentence
    Config                 : Bag -> KSentence
    KSentenceList          : List(KSentence) -> StartDz
                           : String -> TAGCONTENT
                           : String -> KEY
    Map1List               : Map * Map -> Map
                           : MapItem -> Map
    Map1Empty              : Map
    Map1Rewrite            : Map * Map -> Map
    Map12Empty             : Map
    MapItem12Var           : VARID -> Map
    Map1Var                : VARID -> Map
    Map12Var               : VARID -> Map
    Bag1List               : Bag * Bag -> Bag
                           : BagItem -> Bag
    Bag1Empty              : Bag
    Bag1Rewrite            : Bag * Bag -> Bag
    Bag12Empty             : Bag
    BagItem12Var           : VARID -> Bag
    Bag1Var                : VARID -> Bag
    Bag12Var               : VARID -> Bag
    Set1List               : Set * Set -> Set
                           : SetItem -> Set
    Set1Empty              : Set
    Set1Rewrite            : Set * Set -> Set
    Set12Empty             : Set
    SetItem12Var           : VARID -> Set
    Set1Var                : VARID -> Set
    Set12Var               : VARID -> Set
    List1List              : List * List -> List
                           : ListItem -> List
    List1Empty             : List
    List1Rewrite           : List * List -> List
    List12Empty            : List
    ListItem12Var          : VARID -> List
    List1Var               : VARID -> List
    List12Var              : VARID -> List
    ListDlKDr1List         : ListDlKDr * ListDlKDr -> ListDlKDr
    ListDlKDr12Empty       : ListDlKDr
    ListDlKDr1Rewrite      : ListDlKDr * ListDlKDr -> ListDlKDr
    ListDlKDr1Var          : VARID -> ListDlKDr
    ListDlKDr12Var         : VARID -> ListDlKDr
                           : K -> ListDlKDr
    K1Seq                  : K * K -> K
    K1Empty                : K
    K12Empty               : K
    K1Rewrite              : K * K -> K
    K1Var                  : VARID -> K
    K12Var                 : VARID -> K
    K12Hole                : K
    K1Hole                 : K
    K1App                  : KLabel * ListDlKDr -> K
    KLabel1Var             : VARID -> KLabel
    KLabel12Var            : VARID -> KLabel
    KLabel1Rewrite         : KLabel * KLabel -> KLabel
    KLabel1Const           : DzKLabel -> KLabel
                           : String -> DzKLabel
                           : String -> DzDzSTRING
                           : String -> DzDzID
                           : String -> VARID


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
