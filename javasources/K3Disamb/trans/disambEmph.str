module disambEmph

imports
	libstratego-lib
	libstratego-gpp
	libstratego-aterm
	libstratego-sglr

	include/K3Disamb

strategies

rules	// emphasize vars - disambiguate declared variables
	match2var = ?c#(xs) ;
				where(<string-ends-with(|"12Var")> c) ; 		// match on a term that ends with "12Var"
				where(not(<?["_"]> xs))							// but not on anonymous variable declarations



	emphasizeVars =
		where(varDefs := <collect-all(match2var)>) ;			// find all safe variable declarations
		//where(<debug(!"vars : ")> varDefs) ;
		topdown(try(emphasizeVars2(|varDefs))) ;				// emphasize all unsafe variables
		topdown(try(removeDuplicateAmb))

	emphasizeVars2(|varDefs):
		sort#(x) -> sort1#([name])
		where <string-ends-with(|"1Var")> sort
		where <?[name]> x  // get the name of the variable
		where <one({sort: ?sort#([name])
					; sort1 := sort
				})> varDefs // get the variable type for "name", if any
		//where
		//	ss := <string-replace(|"12Var", "1Var")> sort1
		//where
		//	<one(?ss#([name]))> x <+
		//	where(<debug(!"WARNING - 1: You can't have the declared sort at: ")> (<origin-location>, <string-replace(|"1Var", "")>ss))

	removeDuplicateAmb:
		amb(x) -> a
		where rez := <nub> x
		where a := <if <lt>(<length> rez, 2) then !<last> rez else !amb(rez) end>


