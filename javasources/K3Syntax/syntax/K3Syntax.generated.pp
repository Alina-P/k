[
   KModuleList               -- _1 _2,
   KModuleList.1:iter-star   -- _1,
   KModuleList.2:iter-star   -- _1,
   Require                   -- KW["require"] _1,
   KModule                   -- KW["module"] _1 _2 _3 KW["endmodule"],
   KModule.3:iter-star       -- _1,
   KInterface                -- KW["interface"] _1 _2 _3 KW["endinterface"],
   KInterface.3:iter-star    -- _1,
   KModHeader                -- _1,
   KModHeader.1:iter-star    -- _1,
   Including                 -- KW["including"] _1,
   ModuleSum                 -- _1,
   ModuleSum.1:iter-sep      -- _1 KW["+"],
   ModName                   -- _1,
   Config                    -- V  [H  [KW["configuration"]] _1],
   Config.1:iter             -- _1,
   Rule                      -- V  [H  [KW["rule"]] _1],
   Rule.1:iter               -- _1,
   Context                   -- V  [H  [KW["context"]] _1],
   Context.1:iter            -- _1,
   Syntax                    -- KW["syntax"] _1 KW["::="] _2,
   Syntax.2:iter-sep         -- _1 KW[">"],
   LeftOrList                -- V  [H  [KW["left:"]] _1],
   LeftOrList.1:iter-sep     -- _1 KW["|"],
   RightOrList               -- V  [H  [KW["right:"]] _1],
   RightOrList.1:iter-sep    -- _1 KW["|"],
   NonAssocOrList            -- V  [H  [KW["non-assoc:"]] _1],
   NonAssocOrList.1:iter-sep -- _1 KW["|"],
   OrList                    -- _1,
   OrList.1:iter-sep         -- _1 KW["|"],
   Prod                      -- _1,
   Prod.1:iter               -- _1,
   AnnoProd                  -- _1 KW["["] _2 KW["]"],
   AnnoProd.1:iter           -- _1,
   AnnoProd.2:iter-sep       -- _1 KW[","],
   Terminal                  -- _1,
   Sort                      -- _1,
   List                      -- KW["List{"] _1 KW[","] _2 KW["}"],
   Tag                       -- _1,
   TagParam                  -- _1 KW["("] _2 KW[")"],
   TagParam                  -- _1 KW["("] _2 KW[")"]
]