K Tutorial --- LAMBDA
by Grigore Rosu

Here you will learn how to define a very simple language in K and the basics
of how to use the K tool.  The language is a variant of lambda calculus and
its definition is based on substitution.  Specifically, you will learn the
following:

* How to define a module.
* How to define a language syntax.
* How to use the defined syntax to parse programs.
* How to import predefined modules.
* How to define evaluation strategies using strictness attributes.
* How to define semantic rules.
* How the predefined generic substitution works.
* How to generate PDF and HTML documentation from ASCII definitions.
* How to include builtins (integers and Booleans) into your language.
* How to define derived language constructs using structural rules.
* How to use configuration cells and cell comprehension in your rules.

The file lambda.k shows the entire language definition, as it is after the
last lesson in the "lessons" folder, and the files lambda.pdf and lambda.html
are documentation files generated by the K tool from lambda.k (we will learn
how to do that, too).  The folder "programs" contains programs that we will
be able to execute with our language semantics.  Take a look at these files
to get an idea of what we are going to do, then go to the "lessons" folder.
