load cink-compiled

mod MCK is
  including CINK .

  op #initConfig : -> Bag .

  eq #initConfig =
#eval(__((_|->_((# "$PGM"(.List{K})) ,('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('_;('int_('_`,_(_`,`,_('_=_(_`,`,_(#_(#id "flag1") (.List{K}) ,#_(0) (.List{K}) )) ,'.Exps(.List{K}) )) ) ) ,'_;('int_('_`,_(_`,`,_('_=_(_`,`,_(#_(#id "flag2") (.List{K}) ,#_(0) (.List{K}) )) ,'.Exps(.List{K}) )) ) ) )) ,'_;('int_('_`,_(_`,`,_('_=_(_`,`,_(#_(#id "turn") (.List{K}) ,#_(1) (.List{K}) )) ,'.Exps(.List{K}) )) ) ) )) ,'_;('int_('_`,_(_`,`,_('_=_(_`,`,_(#_(#id "critical1") (.List{K}) ,#_(0) (.List{K}) )) ,'.Exps(.List{K}) )) ) ) )) ,'_;('int_('_`,_(_`,`,_('_=_(_`,`,_(#_(#id "critical2") (.List{K}) ,#_(0) (.List{K}) )) ,'.Exps(.List{K}) )) ) ) )) ,'_`(_`)`{_`}(_`,`,_('int_('_`,_(_`,`,_(#_(#id "dekker1") (.List{K}) ,'.Exps(.List{K}) )) ) ,'.Decls(.List{K}) ,'while`(_`)_(_`,`,_(#_(true) (.List{K}) ,'`{_`}('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('_;('_=_(_`,`,_(#_(#id "flag1") (.List{K}) ,#_(1) (.List{K}) )) ) ,'_;('_=_(_`,`,_(#_(#id "turn") (.List{K}) ,#_(2) (.List{K}) )) ) )) ,'while`(_`)_(_`,`,_('_&&_(_`,`,_('_==_(_`,`,_(#_(#id "flag2") (.List{K}) ,#_(1) (.List{K}) )) ,'_==_(_`,`,_(#_(#id "turn") (.List{K}) ,#_(2) (.List{K}) )) )) ,'`{`}(.List{K}) )) )) ,'_;('_=_(_`,`,_(#_(#id "critical1") (.List{K}) ,#_(1) (.List{K}) )) ) )) ,'_;('_=_(_`,`,_(#_(#id "critical1") (.List{K}) ,#_(0) (.List{K}) )) ) )) ,'_;('_=_(_`,`,_(#_(#id "flag1") (.List{K}) ,#_(0) (.List{K}) )) ) )) ) )) )) )) ,'_`(_`)`{_`}(_`,`,_('int_('_`,_(_`,`,_(#_(#id "dekker2") (.List{K}) ,'.Exps(.List{K}) )) ) ,'.Decls(.List{K}) ,'while`(_`)_(_`,`,_(#_(true) (.List{K}) ,'`{_`}('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('__(_`,`,_('_;('_=_(_`,`,_(#_(#id "flag2") (.List{K}) ,#_(1) (.List{K}) )) ) ,'_;('_=_(_`,`,_(#_(#id "turn") (.List{K}) ,#_(1) (.List{K}) )) ) )) ,'while`(_`)_(_`,`,_('_&&_(_`,`,_('_==_(_`,`,_(#_(#id "flag1") (.List{K}) ,#_(1) (.List{K}) )) ,'_==_(_`,`,_(#_(#id "turn") (.List{K}) ,#_(1) (.List{K}) )) )) ,'`{`}(.List{K}) )) )) ,'_;('_=_(_`,`,_(#_(#id "critical2") (.List{K}) ,#_(1) (.List{K}) )) ) )) ,'_;('_=_(_`,`,_(#_(#id "critical2") (.List{K}) ,#_(0) (.List{K}) )) ) )) ,'_;('_=_(_`,`,_(#_(#id "flag2") (.List{K}) ,#_(0) (.List{K}) )) ) )) ) )) )) )) ,'_`(_`)`{_`}(_`,`,_('int_('_`,_(_`,`,_(#_(#id "main") (.List{K}) ,'.Exps(.List{K}) )) ) ,'.Decls(.List{K}) ,'__(_`,`,_('std::thread_`(_`);(_`,`,_(#_(#id "t1") (.List{K}) ,'_`,_(_`,`,_(#_(#id "dekker1") (.List{K}) ,'.Exps(.List{K}) )) )) ,'std::thread_`(_`);(_`,`,_(#_(#id "t2") (.List{K}) ,'_`,_(_`,`,_(#_(#id "dekker2") (.List{K}) ,'.Exps(.List{K}) )) )) )) )) )) 
))),(.).Map)) .
endm

red
_`(_`)(('modelCheck`(_`,_`)).KLabel,_`,`,_(_`(_`)(#_(KItem`(_`)(#initConfig)),.List`{K`}),
*** put the ast of the formula here
'LTL`[`]_('_LTL->_(_`,`,_('eqTo`(_`,_`)(_`,`,_(#_(#id "critical1") (.List{K}) ,#_(1) (.List{K}) )) ,'eqTo`(_`,_`)(_`,`,_(#_(#id "critical2") (.List{K}) ,#_(1) (.List{K}) )) )) ) 
)) .




