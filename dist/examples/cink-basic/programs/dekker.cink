/* This is Dekker's algorithm for mutual exclusion.
   This program is not meant to be executed, it is meant to be model checked.
   The model-checker can be called using the "krun" command:

   krun programs/dekker.cink --ltlmc "LTL[] (eqTo(critical1, 1) LTL-> eqTo(critical2, 0))"

   If the formula is stored into a file, say form.cink, then the following 
   command can be used:

   krun programs/dekker.cink --ltlmc programs/form.cink 
*/

int flag1 = 0;
int flag2 = 0;
int turn = 1;
int critical1 = 0;
int critical2 = 0;

int dekker1() {
  while (true) {
    flag1 = 1; turn = 2;
    while((flag2 == 1) && (turn == 2)) { }
    // Enter critical section
    critical1 = 1;
    // Critical stuff ...
    // Leave critical section
    critical1 = 0;
    flag1 = 0;
  }
}

int dekker2() {
  while (true) {
    flag2 = 1; turn = 1;
    while((flag1 == 1) && (turn == 1)) { }
    // Enter critical section
    critical2 = 1;
    // Critical stuff ...
    // Leave critical section
    critical2 = 0;
    flag2 = 0;
  }
}

int main() {
  std::thread t1(dekker1);
  std::thread t2(dekker2);
}
