// This program heap sorts an array passed as input from the standard
// console (first its length, then its elements).  It reads and prints
// each elements, then it prints the entire array sorted

var v[100];

function siftDown(root, bottom) {
  var done = false, maxChild, temp;

  while (root*2 <= bottom and not done) do {
    if (root*2 == bottom)
    then maxChild = root*2;
    else if (v[root*2] > v[root*2 + 1])
         then maxChild = root*2;
         else maxChild = root*2 + 1;
    if (v[root] < v[maxChild]) then {
      temp = v[root];
      v[root] = v[maxChild];
      v[maxChild] = temp;
      root = maxChild;
    }
    else done = true;
  }
}

function heapSort(size) {
  var temp, i = (size/2) - 1;
  while (i >= 0) do {
    siftDown(i, size - 1);
    i = i - 1;
  }
  i = size - 1;
  while (i >= 1 ) do {
    temp = v[0];
    v[0] = v[i];
    v[i] = temp;
    siftDown(0, i - 1);
    i = i - 1;
  }
}

function main() {
  print("Length of array = ");
  var x = read() ;
  print("Input each of the ",x," elements of the array\n");
  for y = 0 to (x - 1) do {
    print("Element ",y," = ");
    v[y] = read();
  }
  print("Sorting the array using heap sort ... ");
  heapSort(x) ;
  print("Done!\n", "Below is the sorted sequence:\n");
  for y = 0 to (x - 1) do {
    print("Element ", y, " = ", v[y],"\n");
  }
  print("Done\n");
}
