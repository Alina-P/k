K Tutorial --- LAMBDA --- Generating Documentattion; Latex Attributes
by Grigore Rosu

Now that we have a first complete language definition, we can go ahead and
also generate documentation for it:

  kompile lambda --pdf   (this generates PDF documentation)
  kompile lambda --html  (this generates HTML documentation)

To enhance readability, we may want to replace the keyword "lambda" by the
mathematical lambda symbol in generated documentation.  We can control
the way we display language constructs in the generated documentation
by associating them Latex attributes.

This is actually quite easy.  All we have to do is to associate a "latex"
attribute to the production defining the construct in question, following
the Latex syntax for defining new commands (or macros).

In our case, we associate the atrribute "latex(\lambda{#1}.{#2})" to the
production declaring the lambda abstraction (recall that in Latex, #n refers
to the n-th argument of the defined new command).

Compile the new lambda.k using the option --pdf and --html to see how the
latex attribute is being used in the produced output.

Now we have a simple programming language, with a nice documentation.  However,
it is not easy to write interesting programs in this language.  Almost all
programming languages built upon existing data-types and libraries.  The K
tool provides a few of these (and the user can add more).

In the next lesson we show how we can add builtin integers and booleans to
LAMBDA, so we can start to evaluate meaningful expressions.
