# This file contains equations in Maude for hooks definitions 
# which don't conform to the default pattern.
\#K-EQUAL\:_\=\=K_ : eq '_==K_(GeneratedFreshVar132:K,, GeneratedFreshVar133:K)  = _`(_`)(# _==K_(GeneratedFreshVar132:K , GeneratedFreshVar133:K ), .List`{K`}) .
\#INT\:_/Int_ : eq '_/Int_(_`(_`)(#_(GeneratedFreshVar30:#Int), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar31:#NzInt), .List{K}) ) = _`(_`)(# _/Int_(GeneratedFreshVar30:#Int , GeneratedFreshVar31:#NzInt ), .List`{K`}) .
\#INT\:_%Int_ : eq '_%Int_(_`(_`)(#_(GeneratedFreshVar30:#Int), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar31:#NzInt), .List{K}) ) = _`(_`)(# _%Int_(GeneratedFreshVar30:#Int , GeneratedFreshVar31:#NzInt ), .List`{K`}) .
\#INT\:_^Int_ : eq '_^Int_(_`(_`)(#_(GeneratedFreshVar30:#Int), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar31:#Nat), .List{K}) ) = _`(_`)(# _^Int_(GeneratedFreshVar30:#Int , GeneratedFreshVar31:#Nat ), .List`{K`}) .
\#INT\:_>>Int_ : eq '_>>Int_(_`(_`)(#_(GeneratedFreshVar30:#Int), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar31:#Nat), .List{K}) ) = _`(_`)(# _>>Int_(GeneratedFreshVar30:#Int , GeneratedFreshVar31:#Nat ), .List`{K`}) .
\#INT\:_<<Int_ : eq '_<<Int_(_`(_`)(#_(GeneratedFreshVar30:#Int), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar31:#Nat), .List{K}) ) = _`(_`)(# _<<Int_(GeneratedFreshVar30:#Int , GeneratedFreshVar31:#Nat ), .List`{K`}) .
\#STRING\:asciiString : eq asciiString(_`(_`)(#_(GeneratedFreshVar88:#Char), .List{K}) ) = _`(_`)(# asciiString(GeneratedFreshVar88:#Char ), .List`{K`}) .
\#STRING\:substrString : eq substrString(_`(_`)(#_(GeneratedFreshVar90:#String), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar91:#Nat), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar92:#Nat), .List{K}) ) = _`(_`)(# substrString(GeneratedFreshVar90:#String , GeneratedFreshVar91:#Nat , GeneratedFreshVar92:#Nat ), .List`{K`}) .
\#STRING\:findString : eq findString(_`(_`)(#_(GeneratedFreshVar94:#String), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar95:#String), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar96:#Nat), .List{K}) ) = _`(_`)(# findString(GeneratedFreshVar94:#String , GeneratedFreshVar95:#String , GeneratedFreshVar96:#Nat ), .List`{K`}) .
\#STRING\:rfindString : eq rfindString(_`(_`)(#_(GeneratedFreshVar98:#String), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar99:#String), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar100:#Nat), .List{K}) ) = _`(_`)(# rfindString(GeneratedFreshVar98:#String , GeneratedFreshVar99:#String , GeneratedFreshVar100:#Nat ), .List`{K`}) .
\#STRING\:charString : ceq charString(_`(_`)(#_(GeneratedFreshVar86:#Nat), .List{K}) ) = _`(_`)(# charString(GeneratedFreshVar86:#Nat ), .List`{K`}) if GeneratedFreshVar86:#Nat <=Int 255 .
\#RANDOM\:randomRandom : eq randomRandom(_`(_`)(#_(GeneratedFreshVar135:#Nat), .List{K}) ) = _`(_`)(# randomRandom(GeneratedFreshVar135:#Nat ), .List`{K`}) .
\#FLOAT\:_/Float_ : ceq '_/Float_(_`(_`)(#_(GeneratedFreshVar44:#Float), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar45:#Float), .List{K}) ) = _`(_`)(# _/Float_(GeneratedFreshVar44:#Float , GeneratedFreshVar45:#Float ), .List`{K`}) if GeneratedFreshVar45:#Float ==Float 0.0 = false .
\#FLOAT\:_%Float_ : ceq '_%Float_(_`(_`)(#_(GeneratedFreshVar46:#Float), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar47:#Float), .List{K}) ) = _`(_`)(# _%Float_(GeneratedFreshVar46:#Float , GeneratedFreshVar47:#Float ), .List`{K`}) if GeneratedFreshVar47:#Float ==Float 0.0 = false .
\#FLOAT\:_^Float_ : ceq '_^Float_(_`(_`)(#_(GeneratedFreshVar46:#Float), .List{K}) ,, _`(_`)(#_(GeneratedFreshVar47:#Float), .List{K}) ) = _`(_`)(# _^Float_(GeneratedFreshVar46:#Float , GeneratedFreshVar47:#Float ), .List`{K`}) if GeneratedFreshVar46:#Float =/=Universal 0.0 or-else GeneratedFreshVar47:#Float >=Float 0.0 .
