// Program testing Collatz' conjecture up to a user-provided number.

// Experiment: change the return type of the collatz function below to "int".
// Then the typed static SIMPLE will type-check it, but the typed
// dynamic SIMPLE will get stuck.  The former is allowed to work because
// we want to allow flexibility to implementations to provide return
// default values to functions (like C does), but at the same time we
// do not want to enforce any particular such value, which is why the
// latter gets stuck.

function collatz(n:int):void {
  var s:int=0;
  print("Testing Collatz' conjecture for n = ",n," ... ");
  while n > 1 do {
    s = s+1;
    if n == (n/2)*2
    then n = n/2;
    else n = 3*n+1;
  }
  print("Done! It took ",s," steps.\n");
}

function main():void {
  print("Testing Collatz' conjecture up to what number? ");
  var m:int = read();
  for i = 1 to m do
    collatz(i);
  print("Done.  It appears to hold.\n");
}
