// This is Dekker's algorithm for mutual exclusion.
// This program is not meant to be executed, it is meant to be model checked.

// Unlike in the untyped SIMPLE, we cannot initialize variables anymore
// when we declare them, so all initializations of the variables below
// are deferred to the main() function.

var flag1:int, flag2:int, turn:int, critical1:int, critical2:int;

function dekker1():void {
  flag1 = 1; turn = 2;
  while((flag2 == 1) and (turn == 2)) do { }
  // Enter critical section
  critical1 = 1;
  // Critical stuff ...
  // Leave critical section
  critical1 = 0;
  flag1 = 0;
}

function dekker2():void {
  flag2 = 1; turn = 1;
  while((flag1 == 1) and (turn == 1)) do { }
  // Enter critical section
  critical2 = 1;
  // Critical stuff ...
  // Leave critical section
  critical2 = 0;
  flag2 = 0;
}

function main():void {
  flag1 = flag2 = critical1 = critical2 = 0;
  turn = 1;

  spawn while(true) do { dekker1(); }
  spawn while(true) do { dekker2(); }
}
