// Testing super in combination with dynamic method dispatch

class a {
  var i;
  var j;
  method a() {
    i = 1;
    j = i + 1;
    return j;
  }
  method f() {
    return a();
  }
  method g() {
    return f();
  }
  method h() {
    return (i + j);
  }
}

class b extends a {
  var j;
  var k;
  method a() {
    return this.b();
  }
  method b() {
    super.a();
    j = 10;
    k = j + 1;
    return k;
  }
  method g() {
    return super.h();
  }
  method h() {
    return g();	   
  }
}

class c extends b {
  method a() {
    return super.a();
  }
  method b() {
    return super.b();
  }
  method c() {
    i = 100;
    j = i + 1;
    k = j + 1;
    return k;
  }
  method g() {
    return (i + k * j);
  }
}

class main {
  method p(o) {
    print(o.f(), " ");
    print(o.g(), " ");
    print(o.h(), "\n");
  }
  method main() {
    this.p(new a());
    this.p(new b());
    this.p(new c());
  }
}

// 2 2 3
// 11 3 3
// 11 111 111
